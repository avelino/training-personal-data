{:paths ["src" "test"]
 :deps {org.babashka/http-client {:mvn/version "0.4.15"}
        cheshire/cheshire {:mvn/version "5.12.0"}
        com.taoensso/timbre {:mvn/version "6.3.1"}
        org.scicloj/noj {:mvn/version "2-beta4"}
        scicloj/tablecloth {:mvn/version "7.021"}
        scicloj/metamorph {:mvn/version "0.2.0"}
        techascent/tech.ml.dataset {:mvn/version "7.021"}}

 :tasks
 {:requires ([babashka.fs :as fs])
  :init (do
          (def version "1.0.0"))

  run:oura {:doc "Run ouraring with batch processing"
            :task (do
                    (println "\nRun ouraring with batch processing")
                    (let [args *command-line-args*
                          batch-size (or (nth args 2 nil) "50")]
                      (shell (format "bb -cp src -m training-personal-data.ouraring %s %s --batch-size %s"
                                     (first args) (second args) batch-size))))}

  run:ml {:doc "Run ML analysis on Oura Ring data"
          :task (do
                  (println "\nRunning ML analysis")
                  (let [args *command-line-args*]
                    (shell (format "bb -cp src -m training-personal-data.ml.core %s %s"
                                   (first args) (second args)))))}

  run:week-insight {:doc "Generate weekly insights from Oura Ring data using GPT"
                    :task (do
                            (println "\nGenerating weekly insights from Oura Ring data")
                            (let [args *command-line-args*]
                              (shell (format "bb -cp src -m training-personal-data.insights.week %s"
                                             (first args)))))}

  test {:doc "Run all tests"
        :task (do
                (println "\nRunning tests...")
                (shell "bb -cp test:src -m training-personal-data.test-runner"))}}}
